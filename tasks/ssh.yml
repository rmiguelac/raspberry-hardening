---
# Add localhost to ~/.ssh/authorized
# Change default port,
# Do not allow PasswordAuthentication
# Do not allow Root login
# Do not allow X11Forwarding
- name: Make sure ssh connection is possible
  block:
    - name: Ensure ~/.ssh exists
      ansible.builtin.file:
        path: "/home/{{ pi_user.username }}/.ssh"
        state: directory
        mode: '0700'
        owner: "{{ pi_user.username }}"
        group: "{{ pi_user.username }}"

    - name: Allow no-password ssh from localhost to new user
      ansible.posix.authorized_key:
        user: "{{ pi_user.username }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
      register: authkey

  become: true

# We split disabling login password from other ssh
# config due to the possibility of previous step
# failing and we losing connection to the pi(s)
- name: Change sudoers auth persmissions
  block:
    - name: Disable password login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: "^#{{ item.key }}"
        line: "{{ item.key }} {{ item.value }}"
      loop:
        - key: PasswordAuthentication
          value: "no"
      when: authkey is succeeded
      notify: Restart SSH Service

    - name: sshd_config
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: "^{{ item.key }}"
        line: "{{ item.key }} {{ item.value }}"
      loop:
        - key: PermitRootLogin
          value: "no"
        - key: PubkeyAuthentication
          value: "yes"
        - key: X11Forwarding
          value: "no"
        - key: Port
          value: "{{ ssh_port }}"
      when: authkey is succeeded
      notify: Restart SSH Service

  become: true
